//#FILENAME:src/.generated/data/{{type data.metadata.name}}DB.ts:write-always
//
// GENERATED SOURCE - DO NOT EDIT
//

import { MongoDB as $MongoDB, createMongoDBClient as $createMongoDBClient } from '@kapeta/sdk-nosql-mongodb';
import { Prisma, PrismaClient } from './clients/{{data.metadata.name}}';
import { ConfigProvider } from '@kapeta/sdk-config';

function createClient(opts: Prisma.PrismaClientOptions): PrismaClient {
    return new PrismaClient(opts);
};

/*
 * Create a ready and connected {{type data.metadata.name}}DB client.
 *
 * See https://github.com/kapetacom/sdk-nodejs-nosql-mongodb for more information.
 */
export const create{{type data.metadata.name}}DBClient = (config:ConfigProvider) => {
    return $createMongoDBClient<PrismaClient>(config, '{{string data.metadata.name}}', createClient);
};

/**
 * Use this class to access the {{data.metadata.name}} database.
 * Also see {@link create{{type data.metadata.name}}DBClient} as the recommended way of connecting to the database.
 *
 * See https://github.com/kapetacom/sdk-nodejs-nosql-mongodb for more information.
 */
export class {{type data.metadata.name}}DB extends $MongoDB<PrismaClient> {
    constructor() {
        super('{{string data.metadata.name}}');
    }

    createClient(opts:any): PrismaClient {
        return createClient(opts);
    }
}