//#FILENAME:src/.generated/clients/{{type data.metadata.name}}Client.ts:write-always
//
// GENERATED SOURCE - DO NOT EDIT
//
import { RestClient, RestClientRequest} from '@kapeta/sdk-rest-client';
{{#eachTypeReference data.spec.methods all=true}}
import { {{type name}} } from "../entities/{{type name}}";
{{/eachTypeReference}}
{{#usesAnyOf (toArray 'kapeta/resource-type-auth-jwt-provider' 'kapeta/resource-type-auth-jwt-consumer') }}
import { getJWTToken } from "@kapeta/sdk-auth-jwt";
{{/usesAnyOf}}

export class {{type data.metadata.name}}Client extends RestClient {

        constructor() {
            super('{{string data.metadata.name}}');
        }

    {{#usesAnyOf (toArray 'kapeta/resource-type-auth-jwt-provider' 'kapeta/resource-type-auth-jwt-consumer') }}
        protected $afterCreate(request: RestClientRequest):void {
            if (request.hasHeader('Authorization')) {
                // Do not overwrite existing authorization header
                return;
            }

            // Adds current JWT token to request if available
            const jwtToken = getJWTToken();
            if (jwtToken?.token) {
                request.withBearerToken(jwtToken.token);
            }
        }
    {{/usesAnyOf}}

    {{#methods data.spec.methods}}


        /**
         * {{comment description}}
         *
         * Throws if service responds with a status code higher than 399 and not 404.
         * For 404 responses, null is returned.
         *
         * HTTP: {{./method}} {{path}}
         */
        async {{method methodName}}(
                {{#arguments arguments}}
                    {{variable argumentName}}{{#if this.optional}}?{{/if}}:{{fieldtype this}}
                {{/arguments}}
                ):Promise<{{returnType responseType}}{{#ifValueType responseType}}|null{{/ifValueType}}> {

            {{#ifValueType responseType}}const result = {{/ifValueType}}await this.$execute(
                '{{string method}}',
                '{{string path}}',
                [
                    {{#arguments arguments}}
                        {
                            name: '{{string argumentName}}',
                            value: {{variable argumentName}},
                            transport: '{{string transport}}'
                        }
                    {{/arguments}}
                ]
            );

            {{#ifValueType responseType}}
                if (result === null) {
                    return null;
                }
                return result as {{returnType ../responseType}};
            {{/ifValueType}}
        }

        /**
         * {{comment description}}
         *
         * Throws if service responds with a status code higher than 399 and not 404.
         * For 404 responses, null is returned.
         *
         * HTTP: {{./method}} {{path}}
         */
        {{method methodName}}Request(
                {{#arguments arguments}}
                    {{variable argumentName}}{{#if optional}}?{{/if}}:{{fieldtype this}}
                {{/arguments}}
                ):RestClientRequest<{{returnType responseType}}{{#ifValueType responseType}}|null{{/ifValueType}}> {

            return this.$create(
                '{{string method}}',
                '{{string path}}',
                [
                    {{#arguments arguments}}
                        {
                            name: '{{string argumentName}}',
                            value: {{variable argumentName}},
                            transport: '{{string transport}}'
                        }
                    {{/arguments}}
                ]
            );
        }

    {{/methods}}
}