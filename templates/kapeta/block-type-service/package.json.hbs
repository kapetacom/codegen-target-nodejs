//#FILENAME:package.json:create-only
{
  "name": "@{{lowercase data.metadata.name}}",
  "version": "0.0.1",
  "type": "commonjs",
  "scripts": {
    "start:dev": "NODE_ENV=development nodemon --watch '**/*' index.ts",
    "start": "NODE_ENV=production ts-node --transpile-only index.ts",
    {{#consumers-of-type 'kapeta/resource-type-mongodb'}}
    "migrate:dev:{{metadata.name}}": "cross-env-shell DATABASE_URL=$(npx kap-mongodb-url {{metadata.name}}) prisma generate --schema ./db/{{metadata.name}}/schema.prisma",
    "migrate:db:{{metadata.name}}": "cross-env-shell DATABASE_URL=$(npx kap-mongodb-url {{metadata.name}}) prisma db push --schema ./db/{{metadata.name}}/schema.prisma",
    {{/consumers-of-type}}
    {{#consumers-of-type 'kapeta/resource-type-postgresql'}}
    "migrate:dev:{{metadata.name}}": "cross-env-shell DATABASE_URL=$(npx kap-postgres-url {{metadata.name}}) prisma migrate dev --schema ./db/{{metadata.name}}/schema.prisma",
    "migrate:db:{{metadata.name}}": "cross-env-shell DATABASE_URL=$(npx kap-postgres-url {{metadata.name}}) prisma migrate deploy --schema ./db/{{metadata.name}}/schema.prisma",
    {{/consumers-of-type}}
    "migrate:dev": "npm-run-pattern migrate:dev:",
    "migrate": "npm-run-pattern migrate:db:",
    "format": "prettier --write .",
    "lint": "tsc --noEmit && eslint src/**/*.ts"
  },
  "prettier": "@kapeta/prettier-config",
  "devDependencies": {
    "@kapeta/eslint-config": "^0.6.0",
    "@kapeta/prettier-config": "^0.6.0",
    "@types/node": "^20.2.5",
    "cross-env": "^7.0.3",
    "eslint": "^8.42.0",
    "eslint-config-prettier": "^8.8.0",
    "nodemon": "^2.0.22",
    "prettier": "^2.8.8"
    {{#consumes 'kapeta/resource-type-smtp-client'}},
        "@types/react": "^18.2.11"
    {{/consumes}}
  },
  "dependencies": {
    "@kapeta/sdk-config": "<2",
    "@kapeta/sdk-server": "<2",
    "ts-node": "^10.9.1",
    "typescript": "^5.0.4",
    "npm-run-pattern": "^1.0.0"
    {{#consumes 'kapeta/resource-type-rest-client'}},
        "@kapeta/sdk-rest-client": "<2"
    {{/consumes}}
    {{#provides 'kapeta/resource-type-rest-api'}},
        "@kapeta/sdk-rest-route": "<2"
    {{/provides}}
    {{#consumes 'kapeta/resource-type-grpc-client'}},
        "@kapeta/sdk-grpc-client": "<2"
    {{/consumes}}
    {{#provides 'kapeta/resource-type-grpc-api'}},
        "@kapeta/sdk-grpc-route": "<2"
    {{/provides}}
    {{#consumes 'kapeta/resource-type-mongodb'}},
        "@kapeta/sdk-nosql-mongodb": "<2"
    {{/consumes}}
    {{#consumes 'kapeta/resource-type-couchdb'}},
        "@kapeta/sdk-nosql-couchdb": "<2"
    {{/consumes}}
    {{#consumes 'kapeta/resource-type-cassandra'}},
        "@kapeta/sdk-nosql-cassandra": "<2"
    {{/consumes}}
    {{#consumes 'kapeta/resource-type-redis'}},
        "@kapeta/sdk-nosql-redis": "<2"
    {{/consumes}}
    {{#consumes 'kapeta/resource-type-postgresql'}},
        "@kapeta/sdk-sqldb-postgresql": "<2"
    {{/consumes}}
    {{#consumes 'kapeta/resource-type-mysql'}},
        "@kapeta/sdk-sqldb-mysql": "<2"
    {{/consumes}}
    {{#consumes 'kapeta/resource-type-mssql'}},
        "@kapeta/sdk-sqldb-mssql": "<2"
    {{/consumes}}
    {{#consumes 'kapeta/resource-type-oracle'}},
        "@kapeta/sdk-sqldb-oracle": "<2"
    {{/consumes}}
    {{#consumes 'kapeta/resource-type-smtp-client'}},
        "@kapeta/sdk-smtp-client": "<2",
        "@react-email/button": "^0.0.8",
        "@react-email/html": "^0.0.4",
        "react": "^18.2.0"
    {{/consumes}}

  }
}