//#FILENAME:src/.generated/routes.ts:write-always
import {Router} from "express";
import {ConfigProvider} from "@kapeta/sdk-config";
{{#usesAnyOf (toArray 'kapeta/resource-type-auth-jwt-provider' 'kapeta/resource-type-auth-jwt-consumer') }}
    import {createAuthMiddleware} from "generated:auth/auth-middleware";
{{/usesAnyOf}}

{{#providers-of-type 'kapeta/resource-type-rest-api'}}
    {{#kaplang-rest-methods spec.source namespace=metadata.name}}
    import { create{{controller-name this}}Router } from "generated:rest/{{kebab (controller-name this)}}-routes";
    {{/kaplang-rest-methods}}
{{/providers-of-type}}


export const createRoutes = async (config:ConfigProvider):Promise<Router> => {
    const routes = Router();
    {{#usesAnyOf (toArray 'kapeta/resource-type-auth-jwt-provider' 'kapeta/resource-type-auth-jwt-consumer') }}
        routes.use(await createAuthMiddleware(config));
    {{/usesAnyOf}}
    {{#providers-of-type 'kapeta/resource-type-rest-api'}}
        {{#kaplang-rest-methods spec.source namespace=metadata.name}}
        routes.use(await create{{controller-name this}}Router(config));
        {{/kaplang-rest-methods}}
    {{/providers-of-type}}
    return routes;
};